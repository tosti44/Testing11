import os
import json
import requests
from bs4 import BeautifulSoup
import yt_dlp as youtube_dl

def get_video_urls(playlist_url):
    response = requests.get(playlist_url)
    soup = BeautifulSoup(response.text, 'html.parser')
    video_urls = []

    # Example logic to extract video links from Pornhub playlist
    for a in soup.find_all('a', href=True):
        href = a['href']
        if "/view_video.php?" in href:
            video_url = "https://www.pornhub.com" + href
            video_urls.append(video_url)
    
    return video_urls

def download_video(video_url, download_path):
    ydl_opts = {
        'outtmpl': os.path.join(download_path, '%(title)s.%(ext)s'),
    }
    with youtube_dl.YoutubeDL(ydl_opts) as ydl:
        ydl.download([video_url])
    print(f"Downloaded: {video_url}")

def load_downloaded_videos(file_path):
    if os.path.exists(file_path):
        with open(file_path, 'r') as file:
            return json.load(file)
    return []

def save_downloaded_videos(file_path, downloaded_videos):
    with open(file_path, 'w') as file:
        json.dump(downloaded_videos, file)

def main():
    playlist_url = "https://www.pornhub.com/playlist/322184261"
    download_path = "downloaded_videos"
    downloaded_videos_file = "downloaded_videos.json"

    # Ensure the download directory exists
    if not os.path.exists(download_path):
        os.makedirs(download_path)

    # Get the current list of video URLs from the playlist
    current_videos = get_video_urls(playlist_url)

    # Load the list of previously downloaded video URLs
    downloaded_videos = load_downloaded_videos(downloaded_videos_file)

    # Find new videos to download
    new_videos = [url for url in current_videos if url not in downloaded_videos]

    # Download new videos
    for video_url in new_videos:
        download_video(video_url, download_path)
        downloaded_videos.append(video_url)

    # Save the updated list of downloaded video URLs
    save_downloaded_videos(downloaded_videos_file, downloaded_videos)

if __name__ == "__main__":
    main()